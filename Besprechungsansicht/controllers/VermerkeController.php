<?php
include "../../utils/_utils.php";
check_login();
header('Content-Type: application/json; charset=utf-8');

$projectID = $_SESSION["projectID"] ?? null;
$username = $_SESSION['username'] ?? 'unknown';
$timestamp = date("Y-m-d H:i:s");
$response = ["success" => true, "addedVermerke" => [], "skipped" => [], "errors" => []];
$vermerkgruppe_id = getPostInt("vermerkgruppe_id");
$raumbereiche = $_POST['raumbereiche'] ?? [];
$action = getPostString("action", "");
$conn = utils_connect_sql();

if ($action === 'updateVermerkText') {
    $id = getPostInt("idtabelle_Vermerke", 0);
    $text = getPostString("Vermerktext");
    if ($id > 0 && $text !== '') {
        $stmt = $conn->prepare("UPDATE tabelle_Vermerke SET Vermerktext = ? WHERE idtabelle_Vermerke = ?");
        $stmt->bind_param("si", $text, $id);
        if ($stmt->execute()) {
            echo json_encode(['success' => true]);
        } else {
            echo json_encode(['success' => false, 'message' => 'Fehler bei Datenbankaktualisierung']);
        }
        $stmt->close();
    } else {
        echo json_encode(['success' => false, 'message' => 'Ungültige Eingaben' . $id . " " . $text]);
    }
    $conn->close();
    exit();
}


if ($action === "addVermerkforEachRoom") {
    if (!$vermerkgruppe_id) {
        echo json_encode(["success" => false, "message" => "Ungültige oder fehlende Vermerkgruppe-ID"]);
        exit;
    }

    if (!is_array($raumbereiche) || count($raumbereiche) === 0) {
        echo json_encode(["success" => false, "message" => "Keine Raumbereiche übermittelt"]);
        exit;
    }

    $stmtUntergruppe = $conn->prepare("
    SELECT idtabelle_Vermerkuntergruppe 
    FROM tabelle_Vermerkuntergruppe 
    WHERE tabelle_Vermerkgruppe_idtabelle_Vermerkgruppe = ? 
      AND Untergruppenname = ?");

    $stmtRaeume = $conn->prepare("
    SELECT idTABELLE_Räume 
    FROM tabelle_räume 
    WHERE `Raumbereich Nutzer` = ? 
      AND tabelle_projekte_idTABELLE_Projekte = ?
      AND Entfallen = 0");

    $stmtCheckVermerkExists = $conn->prepare("
    SELECT v.idtabelle_Vermerke 
    FROM tabelle_vermerke_has_tabelle_räume vr
    JOIN tabelle_Vermerke v ON v.idtabelle_Vermerke = vr.tabelle_vermerke_idTabelle_vermerke
        WHERE v.tabelle_Vermerkuntergruppe_idtabelle_Vermerkuntergruppe = ? 
        AND vr.tabelle_räume_idTabelle_Räume = ?
        AND Vermerkart = ?
    LIMIT 1");

    $stmtInsertVermerk = $conn->prepare("
    INSERT INTO tabelle_Vermerke (
        tabelle_Vermerkuntergruppe_idtabelle_Vermerkuntergruppe,
        Ersteller,
        Erstellungszeit,
        Vermerktext,
        Bearbeitungsstatus,
        Vermerkart
    ) VALUES (?, ?, ?, ?, ?, ?)");

    $stmtInsertVermerkRaum = $conn->prepare("
    INSERT INTO tabelle_vermerke_has_tabelle_räume (
        tabelle_vermerke_idTabelle_vermerke,
        tabelle_räume_idTabelle_räume
    ) VALUES (?, ?)");

    $bearbeitungsstatus = "offen";
    $vermerkart = "Info"; //X is now default value for autogenerated vermerke with no content. These will never be shown.
    $vermerkText = "";

    foreach ($raumbereiche as $raumbereich) {
        $raumbereich = trim($raumbereich);
        if ($raumbereich === "") {
            continue;
        }

        $stmtUntergruppe->bind_param("is", $vermerkgruppe_id, $raumbereich);
        $stmtUntergruppe->execute();
        $resultUG = $stmtUntergruppe->get_result();

        if ($resultUG->num_rows === 0) {
            $response["errors"][] = "Keine Vermerkuntergruppe für Raumbereich '$raumbereich' gefunden.";
            continue;
        }
        $untergruppenId = $resultUG->fetch_assoc()['idtabelle_Vermerkuntergruppe'];
        $stmtRaeume->bind_param("si", $raumbereich, $projectID);
        $stmtRaeume->execute();
        $resultRaeume = $stmtRaeume->get_result();
        if ($resultRaeume->num_rows === 0) {
            $response["errors"][] = "Keine Räume für Raumbereich '$raumbereich' gefunden.";
            continue;
        }

        while ($raum = $resultRaeume->fetch_assoc()) {
            $raumId = $raum['idTABELLE_Räume'];
            $stmtCheckVermerkExists->bind_param("iis", $untergruppenId, $raumId, $vermerkart);
            $stmtCheckVermerkExists->execute();
            $checkRes = $stmtCheckVermerkExists->get_result();
            if ($checkRes->num_rows > 0) {
                $existingVermerkId = $checkRes->fetch_assoc()['idtabelle_Vermerke'];
                $response["skipped"][] = [
                    "untergruppenID" => $untergruppenId,
                    "raumbereich" => $raumbereich,
                    "raumID" => $raumId,
                    "reason" => "Vermerk existiert bereits",
                    "vermerkID" => $existingVermerkId
                ];
                continue;
            }


            $stmtInsertVermerk->bind_param(
                "isssss",
                $untergruppenId,
                $username,
                $timestamp,
                $vermerkText,
                $bearbeitungsstatus,
                $vermerkart);
            if ($stmtInsertVermerk->execute()) {
                $vermerkId = $stmtInsertVermerk->insert_id;
                $stmtInsertVermerkRaum->bind_param("ii", $vermerkId, $raumId);
                if ($stmtInsertVermerkRaum->execute()) {
                    $response["addedVermerke"][] = [
                        "vermerkID" => $vermerkId,
                        "untergruppenID" => $untergruppenId,
                        "raumbereich" => $raumbereich,
                        "raumID" => $raumId,
                        "text" => $vermerkText
                    ];
                } else {
                    $response["errors"][] = "Fehler bei Verknüpfung Vermerk mit Raum (RaumID $raumId): " . $stmtInsertVermerkRaum->error;
                }
            } else {
                $response["errors"][] = "Fehler beim Einfügen des Vermerks für RaumID $raumId: " . $stmtInsertVermerk->error;
            }
        }
    }

    $stmtUntergruppe->close();
    $stmtRaeume->close();
    $stmtCheckVermerkExists->close();
    $stmtInsertVermerk->close();
    $stmtInsertVermerkRaum->close();
    $conn->close();
    echo json_encode($response);

}

if ($action === "getVermerkeToGruppe") {
    if (!$vermerkgruppe_id) {
        echo json_encode(["success" => false, "message" => "Ungültige oder fehlende Vermerkgruppe-ID"]);
        exit;
    }
    $stmt = $conn->prepare("SELECT idtabelle_Vermerkuntergruppe 
                        FROM tabelle_Vermerkuntergruppe 
                        WHERE tabelle_Vermerkgruppe_idtabelle_Vermerkgruppe = ?");
    $stmt->bind_param("i", $vermerkgruppe_id);  // 'i' for integer type
    $stmt->execute();
    $resultUntergruppen = $stmt->get_result();
    $untergruppenIDs = [];
    while ($row = $resultUntergruppen->fetch_assoc()) {
        $untergruppenIDs[] = $row['idtabelle_Vermerkuntergruppe'];
    }
    if (empty($untergruppenIDs)) {
        echo "<p>Keine Vermerkuntergruppen für diese Gruppe gefunden.</p>";
        exit;
    }
    $placeholders = implode(',', array_fill(0, count($untergruppenIDs), '?'));
    $sqlVermerke = "SELECT
    v.idtabelle_Vermerke,
    r.Raumbezeichnung,
    r.Raumnr,
    v.Vermerktext
    FROM tabelle_Vermerke v
             LEFT JOIN tabelle_vermerke_has_tabelle_räume vr
                       ON v.idtabelle_Vermerke = vr.tabelle_vermerke_idTabelle_vermerke
             LEFT JOIN tabelle_räume r
                       ON vr.tabelle_räume_idTabelle_räume = r.idTABELLE_Räume
    WHERE v.tabelle_Vermerkuntergruppe_idtabelle_Vermerkuntergruppe IN ($placeholders);";

    $stmtVermerke = $conn->prepare($sqlVermerke);
    $types = str_repeat('i', count($untergruppenIDs));
    $stmtVermerke->bind_param($types, ...$untergruppenIDs);
    $stmtVermerke->execute();
    $resultVermerke = $stmtVermerke->get_result();
    $stmtVermerke->close();
    $conn->close();

    $vermerkeData = [];
    while ($row = $resultVermerke->fetch_assoc()) {
        if (trim($row['Vermerktext']) !== '') {
            $vermerkeData[] = [
                'ID' => (int)$row['idtabelle_Vermerke'],
                "RBZ" => $row["Raumnr"] . " " . $row['Raumbezeichnung'],
                'Vermerktext' => $row['Vermerktext'],
            ];
        }
    }

    header('Content-Type: application/json; charset=utf-8');
    echo json_encode([
        'data' => $vermerkeData
    ]);
    exit;
}
