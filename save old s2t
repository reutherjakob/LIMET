v3

    function start() {
        var textarea = document.getElementById("vermerkText");
        if ("webkitSpeechRecognition" in window) {
            var speechRecognizer = new webkitSpeechRecognition();
            speechRecognizer.continuous = true;
            speechRecognizer.interimResults = true;
            speechRecognizer.lang = $('#languageSelect').val();
            speechRecognizer.start();

            var finalTranscripts = "";
            speechRecognizer.onresult = function (event) {
                var interimTranscripts = "";
                for (var i = event.resultIndex; i < event.results.length; i++) {
                    var transcript = event.results[i][0].transcript;
                    transcript.replace("\n", "<br>");
                    if (event.results[i].isFinal) {
                        finalTranscripts += transcript;
                    } else {
                        interimTranscripts += transcript;
                    }
                    textarea.value = finalTranscripts + '\n' + interimTranscripts;
                }
            };
            speechRecognizer.onerror = function (event) {};
        } else {
            textarea.value = "Your browser does not support that.";
        }
    }

v4
<script type="application/javascript">
var speechRecognizer;

$('#recordBtn').on('click', function () {
    if ($('#recordBtn').text() === 'Start Recording') {
        startRecording();
    } else {
        stopRecording();
    }
});

function startRecording() {
    $('#recordBtn').addClass('btn-danger').text('Recording...');
    speechRecognizer = new webkitSpeechRecognition();
    speechRecognizer.continuous = true;
    speechRecognizer.interimResults = true;
    speechRecognizer.lang = "de-DE";
    speechRecognizer.start();

    var finalTranscripts = "";
    speechRecognizer.onresult = function (event) {
        var interimTranscripts = "";
        for (var i = event.resultIndex; i < event.results.length; i++) {
            var transcript = event.results[i][0].transcript;
            transcript.replace("\n", "<br>");
            if (event.results[i].isFinal) {
                finalTranscripts += transcript;
            } else {
                interimTranscripts += transcript;
            }
            $('#vermerkText').val(finalTranscripts + '\n' + interimTranscripts);
        }
    };
    speechRecognizer.onerror = function (event) {};
}

function stopRecording() {
    $('#recordBtn').removeClass('btn-danger').text('Start Recording');
    speechRecognizer.stop();
}

    
</script>

v2
 function initSpeechRecognition() {
    var recognition;
    var recognizedText = ''; // Store continuous transcription
    var rec_btn = $('#recordBtn');
    
    
    var currently_rec=false;
 
    function turnRecBtnOff() {
        console.log("Stopping Speech Recognition", currently_rec);
        if (recognition) {
            recognition.stop();
        }
        rec_btn.text('Start Rec').removeClass('btn-danger');
        recognition = null;
        recognizedText = '';
        currently_rec=false;
    }

    function startRecognition() { 
        recognition = new webkitSpeechRecognition();
        recognition.continous=true;
        recognition.lang = $('#languageSelect').val(); //"de-De"; // Set the language
        recognition.start();
        rec_btn.text('Stop Rec').addClass('btn-danger');
        currently_rec=true;
        recognition.onresult = function (event) {
            recognizedText = event.results[0][0].transcript;
            $('#vermerkText').val(function (index, currentValue) {
                return currentValue + recognizedText + '\n';
            });
//            if ($('#ContinousRecordCheckbox').prop('checked')) {
//                currently_rec=false;
//                console.log("Re-Starting", currently_rec);
//                startRecognition();
//            } else {
//                turnRecBtnOff();
//            }
        };
    }

    rec_btn.on('click', function () {
        if ($('#recordBtn').text().trim() === 'Start Rec') {
            startRecognition();
        } else {
            turnRecBtnOff();
        }
    });
}